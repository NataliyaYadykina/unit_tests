Задание 1. Ответьте письменно на вопросы:
*****************************************


---------------------------------------------------
1) Почему использование тестовых заглушек
может быть полезным при написании модульных тестов?
---------------------------------------------------
Использование тестовых заглушек при написании модульных тестов
может быть полезным по следующим причинам:

- Уменьшение зависимости от конкретных значений:
Заглушки заменяют реальные данные или функции, которые могут измениться в будущем,
что позволяет модульным тестам оставаться эффективными даже при изменении этих значений.
Это также помогает предотвратить ошибки, связанные с неправильными значениями.

- Изоляция тестов: Тестовые заглушки позволяют изолировать тесты,
так как они не зависят от внешних факторов или функций,
которые не имеют отношения к конкретному тестируемому модулю.
Это помогает улучшить стабильность и воспроизводимость тестов.

- Улучшение читаемости тестов: Использование заглушек делает код тестов
более читаемым и понятным, так как он фокусируется на тестировании конкретного модуля,
а не на подключении к внешним системам или сложным данным.

- Поддержка повторного использования кода: Модульные тесты могут быть легко модифицированы,
если используются заглушки, так как это позволяет изменять их без влияния на остальную часть теста.

- Поддержка параллельного тестирования: Использование тестовых заглушек позволяет
выполнять несколько тестов параллельно, так как каждый тест использует
свою собственную заглушку, не мешая другим тестам.

- Улучшение производительности: Модульное тестирование с использованием заглушек
обычно выполняется быстрее, так как заглушки заменяют сложные операции или внешние вызовы,
которые могут замедлить процесс тестирования.

- Создание эффективных юнит-тестов: Используя заглушки, можно создавать эффективные юнит-тесты,
которые проверяют отдельные модули без необходимости подключения к сложной инфраструктуре или базам данных.


------------------------------------------------------------------------------
2) Какой тип тестовой заглушки следует использовать, если вам нужно проверить,
что метод был вызван с определенными аргументами?
------------------------------------------------------------------------------
Например, Mockito.
С помощью mock, в котором есть функция assert_called() - Утверждение, что mock вызывался хотя бы 1 раз


----------------------------------------------------
3) Какой тип тестовой заглушки следует использовать,
если вам просто нужно вернуть определенное значение
или исключение в ответ на вызов метода?
----------------------------------------------------
Stub — объекты, также называемые заглушками,
которые возвращают заранее определенные значения на определенные входные данные.


--------------------------------------------------------------
4) Какой тип тестовой заглушки вы бы использовали для имитации
взаимодействия с внешним API или базой данных?
--------------------------------------------------------------
Fake - небольшие фрагменты кода, контролируемые тестами,
которые имитируют поведение фактических частей, заменяемых ими.